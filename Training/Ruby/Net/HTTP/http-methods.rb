#Net::HTTP class methods

=begin

start
key
proxy_uri
get
request_get
address
verify_mode
proxy_from_env=
proxy_address
proxy_address=
proxy_port
proxy_port=
proxy_user
proxy_user=
proxy_pass
proxy_pass=
trace
options
head
started?
set_debug_output
local_host
local_port
open_timeout
read_timeout
read_timeout=
continue_timeout
continue_timeout=
keep_alive_timeout
active?
close_on_empty_response
use_ssl?
use_ssl=
finish
ca_file
ca_path
cert
cert_store
ciphers
ssl_timeout
ssl_version
verify_callback
verify_depth
peer_cert
proxy?
port
lock
unlock
request
proxy_from_env?
proxyaddr
proxyport
inspect
post
patch
delete
put
proppatch
propfind
move
copy
mkcol
request_head
request_post
request_put
get2
head2
post2
put2
send_request
local_host=
local_port=
open_timeout=
keep_alive_timeout=
close_on_empty_response=
ca_file=
ca_path=
cert=
cert_store=
ciphers=
key=
ssl_timeout=
ssl_version=
verify_callback=
verify_depth=
verify_mode=
instance_of?
public_send
instance_variable_get
instance_variable_set
instance_variable_defined?
remove_instance_variable
private_methods
kind_of?
instance_variables
tap
method
public_method
singleton_method
is_a?
extend
define_singleton_method
to_enum
enum_for
<=>
===
=~
!~
eql?
respond_to?
freeze
display
object_id
send
to_s
nil?
hash
class
singleton_class
clone
dup
itself
taint
tainted?
untaint
untrust
trust
untrusted?
methods
protected_methods
frozen?
public_methods
singleton_methods
!
==
!=
__send__
equal?
instance_eval
instance_exec
__id__




=end
